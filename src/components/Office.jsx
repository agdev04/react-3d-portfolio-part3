/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/scene.glb 
*/
"use client";

import React, { useEffect } from "react";
import { useGLTF, useTexture, useVideoTexture } from "@react-three/drei";
import * as THREE from "three";
import { motion } from "framer-motion-3d";
import { animate, useMotionValue } from "framer-motion";
import { useFrame, useThree } from "@react-three/fiber";
import { KTX2Loader } from "three/examples/jsm/loaders/KTX2Loader.js";

export function Office(props) {
  const { section } = props;

  // const { nodes, materials } = useGLTF("/models/scene.glb");
  const gl = useThree((state) => state.gl);
  const { nodes } = useGLTF(
    "/models/scene_ktx2.glb",
    undefined,
    undefined,
    (loader) => {
      const ktx2loader = new KTX2Loader();
      ktx2loader.setTranscoderPath(
        "https://cdn.jsdelivr.net/gh/pmndrs/drei-assets/basis/"
      );
      ktx2loader.detectSupport(gl);
      loader.setKTX2Loader(ktx2loader);
    }
  );

  const texture = useTexture("/textures/baked.jpg");
  const textureVSCode = useVideoTexture("/textures/video.mov");

  texture.flipY = false;
  texture.encoding = THREE.sRGBEncoding;

  const textureMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    transparent: true,
    opacity: 1,
  });

  const textureOpacity = useMotionValue(0);

  useEffect(() => {
    animate(textureOpacity, section === 0 ? 1 : 0);
  }, [section]);

  useFrame(() => {
    textureMaterial.opacity = textureOpacity.get();
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        name="screen"
        geometry={nodes.screen.geometry}
        position={[0.492, 2.418, -4.645]}
        rotation={[Math.PI, -1.561, Math.PI]}
      >
        <meshBasicMaterial map={textureVSCode} toneMapped={false} />
      </mesh>
      <motion.mesh
        name="chair"
        geometry={nodes.chair.geometry}
        material={textureMaterial}
        position={[0.482, 0.978, -1.616]}
        rotation={[-Math.PI / 2, 0, 3.141]}
        scale={0.914}
        animate={{
          scale: section === 0 ? 0.914 : 0,
        }}
      />
      <motion.group
        name="plant"
        position={[-4, 1.132, -3.752]}
        animate={{
          scale: section === 0 ? 1 : 0,
        }}
      >
        <mesh
          name="mesh24448074"
          geometry={nodes.mesh24448074.geometry}
          material={textureMaterial}
        />
        <mesh
          name="mesh24448074_1"
          geometry={nodes.mesh24448074_1.geometry}
          material={textureMaterial}
        />
        <mesh
          name="mesh24448074_2"
          geometry={nodes.mesh24448074_2.geometry}
          material={textureMaterial}
        />
      </motion.group>
      <group
        name="table"
        position={[0.962, 0, -4.319]}
        rotation={[0, -1.565, 0]}
      >
        <mesh
          name="Plane001_Plane002_BlackWood"
          geometry={nodes.Plane001_Plane002_BlackWood.geometry}
          material={textureMaterial}
        />
        <mesh
          name="Plane001_Plane002_BlackWood_1"
          geometry={nodes.Plane001_Plane002_BlackWood_1.geometry}
          material={textureMaterial}
        />
        <mesh
          name="Plane001_Plane002_BlackWood_2"
          geometry={nodes.Plane001_Plane002_BlackWood_2.geometry}
          material={textureMaterial}
        />
        <mesh
          name="Plane001_Plane002_BlackWood_3"
          geometry={nodes.Plane001_Plane002_BlackWood_3.geometry}
          material={textureMaterial}
        />
        <mesh
          name="Plane001_Plane002_BlackWood_4"
          geometry={nodes.Plane001_Plane002_BlackWood_4.geometry}
          material={textureMaterial}
        />
      </group>
      <motion.mesh
        name="imac"
        geometry={nodes.imac.geometry}
        material={textureMaterial}
        position={[0.492, 2.418, -4.745]}
        // position-z={-0.001}
        rotation={[Math.PI, -1.561, Math.PI]}
        animate={{
          scale: section === 0 ? 1 : 0,
        }}
      />
      <mesh
        name="mouse"
        geometry={nodes.mouse.geometry}
        material={textureMaterial}
        position={[1.456, 2.418, -3.807]}
      />
      <motion.group
        name="pikachu"
        position={[2.729, 3.03, -4.205]}
        rotation={[-Math.PI, 0.581, -Math.PI]}
        animate={{
          scale: section === 0 ? 1 : 0,
        }}
      >
        <mesh
          name="mesh1465871970"
          geometry={nodes.mesh1465871970.geometry}
          material={textureMaterial}
        />
        <mesh
          name="mesh1465871970_1"
          geometry={nodes.mesh1465871970_1.geometry}
          material={textureMaterial}
        />
        <mesh
          name="mesh1465871970_2"
          geometry={nodes.mesh1465871970_2.geometry}
          material={textureMaterial}
        />
        <mesh
          name="mesh1465871970_3"
          geometry={nodes.mesh1465871970_3.geometry}
          material={textureMaterial}
        />
        <mesh
          name="mesh1465871970_4"
          geometry={nodes.mesh1465871970_4.geometry}
          material={textureMaterial}
        />
      </motion.group>
      <mesh
        name="keyboard"
        geometry={nodes.keyboard.geometry}
        material={textureMaterial}
        position={[0.236, 2.413, -3.888]}
      />
      <mesh
        name="Plane_1"
        geometry={nodes.Plane_1.geometry}
        material={textureMaterial}
      />
      <mesh
        name="Plane_2"
        geometry={nodes.Plane_2.geometry}
        material={textureMaterial}
      />
      <mesh
        name="Plane_3"
        geometry={nodes.Plane_3.geometry}
        material={textureMaterial}
      />
    </group>
  );
}

useGLTF.preload("/models/scene.glb");
